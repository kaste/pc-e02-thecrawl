name: Crawl Registry

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  crawl:
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: crawler-status
      GH_TOKEN: ${{ github.token }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Ensure wrk directory exists
        run: mkdir -p ./wrk

      - name: Restore wrk cache
        uses: actions/cache@v4
        with:
          path: ./wrk
          key: wrk-cache-${{ github.run_id }}
          restore-keys: |
            wrk-cache-

      - name: Generate registry
        run: uv run -m scripts.generate_registry -o ./wrk/registry.json

      - name: Run crawler
        run: |
          set -o pipefail
          PYTHONUNBUFFERED=1 uv run -m scripts.crawl \
            --registry ./wrk/registry.json \
            --workspace ./wrk/workspace.json \
            2>&1 | tee crawl.log

      - name: Update release notes
        run: |
          # Create or update the release
          gh release view ${{ env.RELEASE_TAG }} || \
          gh release create ${{ env.RELEASE_TAG }} \
            --title "The Crawler Logs" \
            --notes "..."

          DATE=$(TZ=Europe/Berlin date +"%B %d, %Y, %H:%M GMT%:::z" | sed -E 's/([+-])0/\1/')
          REPO_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          # Build new notes
          {
            echo "$DATE  ([logs]($REPO_URL))"
            echo ""
            cat crawl.log
          } > notes.txt

          echo "Updating release notes..."
          gh release edit ${{ env.RELEASE_TAG }} --notes-file notes.txt
